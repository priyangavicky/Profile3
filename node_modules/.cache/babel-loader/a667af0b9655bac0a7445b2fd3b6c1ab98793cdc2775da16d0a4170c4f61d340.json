{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nfunction ICompress() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-unzoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\"\n  }));\n}\nfunction IEnlarge() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-zoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\"\n  }));\n}\nconst testElType = (type, el) => {\n  var _el$tagName, _el$tagName$toUpperCa;\n  return type === (el === null || el === void 0 || (_el$tagName = el.tagName) === null || _el$tagName === void 0 || (_el$tagName$toUpperCa = _el$tagName.toUpperCase) === null || _el$tagName$toUpperCa === void 0 ? void 0 : _el$tagName$toUpperCa.call(_el$tagName));\n};\nconst testDiv = el => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = el => testElType('IMG', el);\nconst testImgLoaded = el => el.complete && el.naturalHeight !== 0;\nconst testSvg = el => testElType('SVG', el);\nconst getScaleToWindow = _ref => {\n  let {\n    height,\n    offset,\n    width\n  } = _ref;\n  return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = _ref2 => {\n  let {\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref2;\n  const scale = getScaleToWindow({\n    height: targetHeight,\n    offset,\n    width: targetWidth\n  });\n  const ratio = targetWidth > targetHeight ? targetWidth / containerWidth : targetHeight / containerHeight;\n  return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = _ref3 => {\n  let {\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref3;\n  if (!containerHeight || !containerWidth) {\n    return 1;\n  }\n  return !hasScalableSrc && targetHeight && targetWidth ? getScaleToWindowMax({\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  }) : getScaleToWindow({\n    height: containerHeight,\n    offset,\n    width: containerWidth\n  });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.currentSrc;\n    } else if (testDiv(imgEl)) {\n      const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n      if (bgImg) {\n        var _URL_REGEX$exec;\n        return (_URL_REGEX$exec = URL_REGEX.exec(bgImg)) === null || _URL_REGEX$exec === void 0 ? void 0 : _URL_REGEX$exec[1];\n      }\n    }\n  }\n};\nconst getImgAlt = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      var _imgEl$alt;\n      return (_imgEl$alt = imgEl.alt) !== null && _imgEl$alt !== void 0 ? _imgEl$alt : undefined;\n    } else {\n      var _imgEl$getAttribute;\n      return (_imgEl$getAttribute = imgEl.getAttribute('aria-label')) !== null && _imgEl$getAttribute !== void 0 ? _imgEl$getAttribute : undefined;\n    }\n  }\n};\nconst getImgRegularStyle = _ref4 => {\n  let {\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref4;\n  const scale = getScale({\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  });\n  return {\n    top: containerTop,\n    left: containerLeft,\n    width: containerWidth * scale,\n    height: containerHeight * scale,\n    transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n  };\n};\nconst parsePosition = _ref5 => {\n  let {\n    position,\n    relativeNum\n  } = _ref5;\n  const positionNum = parseFloat(position);\n  return position.endsWith('%') ? relativeNum * positionNum / 100 : positionNum;\n};\nconst getImgObjectFitStyle = _ref6 => {\n  let {\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    objectFit,\n    objectPosition,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref6;\n  if (objectFit === 'scale-down') {\n    if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n      objectFit = 'none';\n    } else {\n      objectFit = 'contain';\n    }\n  }\n  if (objectFit === 'cover' || objectFit === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = objectFit === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  } else if (objectFit === 'none') {\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  } else if (objectFit === 'fill') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = Math.max(widthRatio, heightRatio);\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      width: containerWidth * scale,\n      height: containerHeight * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  } else {\n    return {};\n  }\n};\nconst getDivImgStyle = _ref7 => {\n  let {\n    backgroundPosition,\n    backgroundSize,\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref7;\n  if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = backgroundSize === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  } else if (backgroundSize === 'auto') {\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  } else {\n    const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n    const sizeWidth = parsePosition({\n      position: sizeW,\n      relativeNum: containerWidth\n    });\n    const sizeHeight = parsePosition({\n      position: sizeH,\n      relativeNum: containerHeight\n    });\n    const widthRatio = sizeWidth / targetWidth;\n    const heightRatio = sizeHeight / targetHeight;\n    const ratio = Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: \"translate(0,0) scale(\".concat(1 / scale, \")\")\n    };\n  }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = _ref8 => {\n  var _imgSrc$slice, _loadedImgEl$naturalH, _loadedImgEl$naturalW;\n  let {\n    hasZoomImg,\n    imgSrc,\n    isSvg,\n    isZoomed,\n    loadedImgEl,\n    offset,\n    shouldRefresh,\n    targetEl\n  } = _ref8;\n  const hasScalableSrc = isSvg || (imgSrc === null || imgSrc === void 0 || (_imgSrc$slice = imgSrc.slice) === null || _imgSrc$slice === void 0 ? void 0 : _imgSrc$slice.call(imgSrc, 0, 18)) === 'data:image/svg+xml' || hasZoomImg || !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n  const imgRect = targetEl.getBoundingClientRect();\n  const targetElComputedStyle = window.getComputedStyle(targetEl);\n  const isDivImg = loadedImgEl != null && testDiv(targetEl);\n  const isImgObjectFit = loadedImgEl != null && !isDivImg;\n  const styleImgRegular = getImgRegularStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: (_loadedImgEl$naturalH = loadedImgEl === null || loadedImgEl === void 0 ? void 0 : loadedImgEl.naturalHeight) !== null && _loadedImgEl$naturalH !== void 0 ? _loadedImgEl$naturalH : imgRect.height,\n    targetWidth: (_loadedImgEl$naturalW = loadedImgEl === null || loadedImgEl === void 0 ? void 0 : loadedImgEl.naturalWidth) !== null && _loadedImgEl$naturalW !== void 0 ? _loadedImgEl$naturalW : imgRect.width\n  });\n  const styleImgObjectFit = isImgObjectFit ? getImgObjectFitStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    objectFit: targetElComputedStyle.objectFit,\n    objectPosition: targetElComputedStyle.objectPosition,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const styleDivImg = isDivImg ? getDivImgStyle({\n    backgroundPosition: targetElComputedStyle.backgroundPosition,\n    backgroundSize: targetElComputedStyle.backgroundSize,\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n  if (isZoomed) {\n    const viewportX = window.innerWidth / 2;\n    const viewportY = window.innerHeight / 2;\n    const childCenterX = parseFloat(String(style.left || 0)) + parseFloat(String(style.width || 0)) / 2;\n    const childCenterY = parseFloat(String(style.top || 0)) + parseFloat(String(style.height || 0)) / 2;\n    const translateX = viewportX - childCenterX;\n    const translateY = viewportY - childCenterY;\n    if (shouldRefresh) {\n      style.transitionDuration = '0.01ms';\n    }\n    style.transform = \"translate(\".concat(translateX, \"px,\").concat(translateY, \"px) scale(1)\");\n  }\n  return style;\n};\nconst getStyleGhost = imgEl => {\n  if (!imgEl) {\n    return {};\n  }\n  if (testSvg(imgEl)) {\n    const parentEl = imgEl.parentElement;\n    const rect = imgEl.getBoundingClientRect();\n    if (parentEl) {\n      const parentRect = parentEl.getBoundingClientRect();\n      return {\n        height: rect.height,\n        left: parentRect.left - rect.left,\n        top: parentRect.top - rect.top,\n        width: rect.width\n      };\n    } else {\n      return {\n        height: rect.height,\n        left: rect.left,\n        width: rect.width,\n        top: rect.top\n      };\n    }\n  } else {\n    return {\n      height: imgEl.offsetHeight,\n      left: imgEl.offsetLeft,\n      width: imgEl.offsetWidth,\n      top: imgEl.offsetTop\n    };\n  }\n};\nconst adjustSvgIDs = svgEl => {\n  const newIdSuffix = '-zoom';\n  const attrs = ['clip-path', 'fill', 'mask', 'marker-start', 'marker-mid', 'marker-end'];\n  const idMap = new Map();\n  if (svgEl.hasAttribute('id')) {\n    const oldId = svgEl.id;\n    const newId = oldId + newIdSuffix;\n    idMap.set(oldId, newId);\n    svgEl.id = newId;\n  }\n  svgEl.querySelectorAll('[id]').forEach(el => {\n    const oldId = el.id;\n    const newId = oldId + newIdSuffix;\n    idMap.set(oldId, newId);\n    el.id = newId;\n  });\n  idMap.forEach((newId, oldId) => {\n    const urlOldID = \"url(#\".concat(oldId, \")\");\n    const urlNewID = \"url(#\".concat(newId, \")\");\n    const attrsQuery = attrs.map(attr => \"[\".concat(attr, \"=\\\"\").concat(urlOldID, \"\\\"]\")).join(', ');\n    svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n      attrs.forEach(attr => {\n        if (usedEl.getAttribute(attr) === urlOldID) {\n          usedEl.setAttribute(attr, urlNewID);\n        }\n      });\n    });\n  });\n  svgEl.querySelectorAll('style').forEach(styleEl => {\n    idMap.forEach((newId, oldId) => {\n      if (styleEl.textContent) {\n        styleEl.textContent = styleEl.textContent.replaceAll(\"#\".concat(oldId), \"#\".concat(newId));\n      }\n    });\n  });\n};\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]'].map(x => \"\".concat(x, \":not([aria-hidden=\\\"true\\\"])\")).join(',');\nconst defaultBodyAttrs = {\n  overflow: '',\n  width: ''\n};\nfunction Controlled(props) {\n  return React.createElement(ControlledBase, {\n    ...props\n  });\n}\nclass ControlledBase extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: '',\n      isZoomImgLoaded: false,\n      loadedImgEl: undefined,\n      modalState: \"UNLOADED\",\n      shouldRefresh: false\n    };\n    this.refContent = React.createRef();\n    this.refDialog = React.createRef();\n    this.refModalContent = React.createRef();\n    this.refModalImg = React.createRef();\n    this.refWrap = React.createRef();\n    this.imgEl = null;\n    this.isScaling = false;\n    this.prevBodyAttrs = defaultBodyAttrs;\n    this.styleModalImg = {};\n    this.getDialogContainer = () => {\n      let el = document.querySelector('[data-rmiz-portal]');\n      if (el == null) {\n        el = document.createElement('div');\n        el.setAttribute('data-rmiz-portal', '');\n        document.body.appendChild(el);\n      }\n      return el;\n    };\n    this.setId = () => {\n      const gen4 = () => Math.random().toString(16).slice(-4);\n      this.setState({\n        id: gen4() + gen4() + gen4()\n      });\n    };\n    this.setAndTrackImg = () => {\n      const contentEl = this.refContent.current;\n      if (!contentEl) return;\n      this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n      if (this.imgEl) {\n        var _this$changeObserver, _this$changeObserver$, _this$imgEl, _this$imgEl$addEventL, _this$imgEl2, _this$imgEl2$addEvent;\n        (_this$changeObserver = this.changeObserver) === null || _this$changeObserver === void 0 || (_this$changeObserver$ = _this$changeObserver.disconnect) === null || _this$changeObserver$ === void 0 || _this$changeObserver$.call(_this$changeObserver);\n        (_this$imgEl = this.imgEl) === null || _this$imgEl === void 0 || (_this$imgEl$addEventL = _this$imgEl.addEventListener) === null || _this$imgEl$addEventL === void 0 || _this$imgEl$addEventL.call(_this$imgEl, 'load', this.handleImgLoad);\n        (_this$imgEl2 = this.imgEl) === null || _this$imgEl2 === void 0 || (_this$imgEl2$addEvent = _this$imgEl2.addEventListener) === null || _this$imgEl2$addEvent === void 0 || _this$imgEl2$addEvent.call(_this$imgEl2, 'click', this.handleZoom);\n        if (!this.state.loadedImgEl) {\n          this.handleImgLoad();\n        }\n        this.imgElObserver = new ResizeObserver(entries => {\n          const entry = entries[0];\n          if (entry !== null && entry !== void 0 && entry.target) {\n            this.imgEl = entry.target;\n            this.setState({});\n          }\n        });\n        this.imgElObserver.observe(this.imgEl);\n      } else if (!this.changeObserver) {\n        this.changeObserver = new MutationObserver(this.setAndTrackImg);\n        this.changeObserver.observe(contentEl, {\n          childList: true,\n          subtree: true\n        });\n      }\n    };\n    this.handleIfZoomChanged = prevIsZoomed => {\n      const {\n        isZoomed\n      } = this.props;\n      if (!prevIsZoomed && isZoomed) {\n        this.zoom();\n      } else if (prevIsZoomed && !isZoomed) {\n        this.unzoom();\n      }\n    };\n    this.handleImgLoad = () => {\n      const {\n        imgEl\n      } = this;\n      const imgSrc = getImgSrc(imgEl);\n      if (!imgSrc) return;\n      const img = new Image();\n      if (testImg(imgEl)) {\n        img.sizes = imgEl.sizes;\n        img.srcset = imgEl.srcset;\n      }\n      img.src = imgSrc;\n      const setLoaded = () => {\n        this.setState({\n          loadedImgEl: img\n        });\n      };\n      img.decode().then(setLoaded).catch(() => {\n        if (testImgLoaded(img)) {\n          setLoaded();\n          return;\n        }\n        img.onload = setLoaded;\n      });\n    };\n    this.handleZoom = () => {\n      if (this.hasImage()) {\n        var _this$props$onZoomCha, _this$props;\n        (_this$props$onZoomCha = (_this$props = this.props).onZoomChange) === null || _this$props$onZoomCha === void 0 || _this$props$onZoomCha.call(_this$props, true);\n      }\n    };\n    this.handleUnzoom = () => {\n      var _this$props$onZoomCha2, _this$props2;\n      (_this$props$onZoomCha2 = (_this$props2 = this.props).onZoomChange) === null || _this$props$onZoomCha2 === void 0 || _this$props$onZoomCha2.call(_this$props2, false);\n    };\n    this.handleDialogCancel = e => {\n      e.preventDefault();\n    };\n    this.handleDialogClick = e => {\n      if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n        this.handleUnzoom();\n      }\n    };\n    this.handleKeyDown = e => {\n      if (e.key === 'Escape' || e.keyCode === 27) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleUnzoom();\n      }\n    };\n    this.handleWheel = e => {\n      if (e.ctrlKey) return;\n      e.stopPropagation();\n      queueMicrotask(() => {\n        this.handleUnzoom();\n      });\n    };\n    this.handleTouchStart = e => {\n      if (e.touches.length > 1) {\n        this.isScaling = true;\n        return;\n      }\n      if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n        this.touchYStart = e.changedTouches[0].screenY;\n      }\n    };\n    this.handleTouchMove = e => {\n      var _window$visualViewpor, _window$visualViewpor2;\n      const browserScale = (_window$visualViewpor = (_window$visualViewpor2 = window.visualViewport) === null || _window$visualViewpor2 === void 0 ? void 0 : _window$visualViewpor2.scale) !== null && _window$visualViewpor !== void 0 ? _window$visualViewpor : 1;\n      if (this.props.canSwipeToUnzoom && !this.isScaling && browserScale <= 1 && this.touchYStart != null && e.changedTouches[0]) {\n        this.touchYEnd = e.changedTouches[0].screenY;\n        const max = Math.max(this.touchYStart, this.touchYEnd);\n        const min = Math.min(this.touchYStart, this.touchYEnd);\n        const delta = Math.abs(max - min);\n        if (delta > this.props.swipeToUnzoomThreshold) {\n          this.touchYStart = undefined;\n          this.touchYEnd = undefined;\n          this.handleUnzoom();\n        }\n      }\n    };\n    this.handleTouchEnd = () => {\n      this.isScaling = false;\n      this.touchYStart = undefined;\n      this.touchYEnd = undefined;\n    };\n    this.handleTouchCancel = () => {\n      this.isScaling = false;\n      this.touchYStart = undefined;\n      this.touchYEnd = undefined;\n    };\n    this.handleResize = () => {\n      this.setState({\n        shouldRefresh: true\n      });\n    };\n    this.hasImage = () => {\n      return this.imgEl && (this.state.loadedImgEl || testSvg(this.imgEl)) && window.getComputedStyle(this.imgEl).display !== 'none';\n    };\n    this.zoom = () => {\n      var _this$refDialog$curre, _this$refDialog$curre2, _this$refModalImg$cur, _this$refModalImg$cur2;\n      this.bodyScrollDisable();\n      (_this$refDialog$curre = this.refDialog.current) === null || _this$refDialog$curre === void 0 || (_this$refDialog$curre2 = _this$refDialog$curre.showModal) === null || _this$refDialog$curre2 === void 0 || _this$refDialog$curre2.call(_this$refDialog$curre);\n      this.setState({\n        modalState: \"LOADING\"\n      });\n      this.loadZoomImg();\n      window.addEventListener('touchstart', this.handleTouchStart, {\n        passive: true\n      });\n      window.addEventListener('touchmove', this.handleTouchMove, {\n        passive: true\n      });\n      window.addEventListener('touchend', this.handleTouchEnd, {\n        passive: true\n      });\n      window.addEventListener('touchcancel', this.handleTouchCancel, {\n        passive: true\n      });\n      document.addEventListener('keydown', this.handleKeyDown, true);\n      (_this$refModalImg$cur = this.refModalImg.current) === null || _this$refModalImg$cur === void 0 || (_this$refModalImg$cur2 = _this$refModalImg$cur.addEventListener) === null || _this$refModalImg$cur2 === void 0 || _this$refModalImg$cur2.call(_this$refModalImg$cur, 'transitionend', this.handleZoomEnd, {\n        once: true\n      });\n    };\n    this.handleZoomEnd = () => {\n      setTimeout(() => {\n        this.setState({\n          modalState: \"LOADED\"\n        });\n        window.addEventListener('resize', this.handleResize, {\n          passive: true\n        });\n        window.addEventListener('wheel', this.handleWheel, {\n          passive: true\n        });\n      }, 0);\n    };\n    this.unzoom = () => {\n      var _this$refModalImg$cur3, _this$refModalImg$cur4;\n      this.setState({\n        modalState: \"UNLOADING\"\n      });\n      window.removeEventListener('wheel', this.handleWheel);\n      window.removeEventListener('touchstart', this.handleTouchStart);\n      window.removeEventListener('touchmove', this.handleTouchMove);\n      window.removeEventListener('touchend', this.handleTouchEnd);\n      window.removeEventListener('touchcancel', this.handleTouchCancel);\n      document.removeEventListener('keydown', this.handleKeyDown, true);\n      (_this$refModalImg$cur3 = this.refModalImg.current) === null || _this$refModalImg$cur3 === void 0 || (_this$refModalImg$cur4 = _this$refModalImg$cur3.addEventListener) === null || _this$refModalImg$cur4 === void 0 || _this$refModalImg$cur4.call(_this$refModalImg$cur3, 'transitionend', this.handleUnzoomEnd, {\n        once: true\n      });\n    };\n    this.handleUnzoomEnd = () => {\n      setTimeout(() => {\n        var _this$refDialog$curre3, _this$refDialog$curre4;\n        window.removeEventListener('resize', this.handleResize);\n        this.setState({\n          shouldRefresh: false,\n          modalState: \"UNLOADED\"\n        });\n        (_this$refDialog$curre3 = this.refDialog.current) === null || _this$refDialog$curre3 === void 0 || (_this$refDialog$curre4 = _this$refDialog$curre3.close) === null || _this$refDialog$curre4 === void 0 || _this$refDialog$curre4.call(_this$refDialog$curre3);\n        this.bodyScrollEnable();\n      }, 0);\n    };\n    this.bodyScrollDisable = () => {\n      this.prevBodyAttrs = {\n        overflow: document.body.style.overflow,\n        width: document.body.style.width\n      };\n      const clientWidth = document.body.clientWidth;\n      document.body.style.overflow = 'hidden';\n      document.body.style.width = \"\".concat(clientWidth, \"px\");\n    };\n    this.bodyScrollEnable = () => {\n      document.body.style.width = this.prevBodyAttrs.width;\n      document.body.style.overflow = this.prevBodyAttrs.overflow;\n      this.prevBodyAttrs = defaultBodyAttrs;\n    };\n    this.loadZoomImg = () => {\n      const {\n        props: {\n          zoomImg\n        }\n      } = this;\n      const zoomImgSrc = zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.src;\n      if (zoomImgSrc) {\n        var _zoomImg$sizes, _zoomImg$srcSet;\n        const img = new Image();\n        img.sizes = (_zoomImg$sizes = zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.sizes) !== null && _zoomImg$sizes !== void 0 ? _zoomImg$sizes : '';\n        img.srcset = (_zoomImg$srcSet = zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.srcSet) !== null && _zoomImg$srcSet !== void 0 ? _zoomImg$srcSet : '';\n        img.src = zoomImgSrc;\n        const setLoaded = () => {\n          this.setState({\n            isZoomImgLoaded: true\n          });\n        };\n        img.decode().then(setLoaded).catch(() => {\n          if (testImgLoaded(img)) {\n            setLoaded();\n            return;\n          }\n          img.onload = setLoaded;\n        });\n      }\n    };\n    this.UNSAFE_handleSvg = () => {\n      const {\n        imgEl,\n        refModalImg,\n        styleModalImg\n      } = this;\n      if (testSvg(imgEl)) {\n        var _refModalImg$current, _refModalImg$current$, _refModalImg$current2, _refModalImg$current3;\n        const svgEl = imgEl.cloneNode(true);\n        adjustSvgIDs(svgEl);\n        svgEl.style.width = \"\".concat(styleModalImg.width || 0, \"px\");\n        svgEl.style.height = \"\".concat(styleModalImg.height || 0, \"px\");\n        svgEl.addEventListener('click', this.handleUnzoom);\n        (_refModalImg$current = refModalImg.current) === null || _refModalImg$current === void 0 || (_refModalImg$current = _refModalImg$current.firstChild) === null || _refModalImg$current === void 0 || (_refModalImg$current$ = _refModalImg$current.remove) === null || _refModalImg$current$ === void 0 || _refModalImg$current$.call(_refModalImg$current);\n        (_refModalImg$current2 = refModalImg.current) === null || _refModalImg$current2 === void 0 || (_refModalImg$current3 = _refModalImg$current2.appendChild) === null || _refModalImg$current3 === void 0 || _refModalImg$current3.call(_refModalImg$current2, svgEl);\n      }\n    };\n  }\n  render() {\n    const {\n      handleDialogCancel,\n      handleDialogClick,\n      handleUnzoom,\n      handleZoom,\n      imgEl,\n      props: {\n        a11yNameButtonUnzoom,\n        a11yNameButtonZoom,\n        children,\n        classDialog,\n        IconUnzoom,\n        IconZoom,\n        isZoomed,\n        wrapElement: WrapElement,\n        ZoomContent,\n        zoomImg,\n        zoomMargin\n      },\n      refContent,\n      refDialog,\n      refModalContent,\n      refModalImg,\n      refWrap,\n      state: {\n        id,\n        isZoomImgLoaded,\n        loadedImgEl,\n        modalState,\n        shouldRefresh\n      }\n    } = this;\n    const idModal = \"rmiz-modal-\".concat(id);\n    const idModalImg = \"rmiz-modal-img-\".concat(id);\n    const isDiv = testDiv(imgEl);\n    const isImg = testImg(imgEl);\n    const isSvg = testSvg(imgEl);\n    const imgAlt = getImgAlt(imgEl);\n    const imgSrc = getImgSrc(imgEl);\n    const imgSizes = isImg ? imgEl.sizes : undefined;\n    const imgSrcSet = isImg ? imgEl.srcset : undefined;\n    const hasZoomImg = !!(zoomImg !== null && zoomImg !== void 0 && zoomImg.src);\n    const hasImage = this.hasImage();\n    const labelBtnZoom = imgAlt ? \"\".concat(a11yNameButtonZoom, \": \").concat(imgAlt) : a11yNameButtonZoom;\n    const isModalActive = modalState === \"LOADING\" || modalState === \"LOADED\";\n    const dataContentState = hasImage ? 'found' : 'not-found';\n    const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\" ? 'hidden' : 'visible';\n    const styleContent = {\n      visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden'\n    };\n    const styleGhost = getStyleGhost(imgEl);\n    this.styleModalImg = hasImage ? getStyleModalImg({\n      hasZoomImg,\n      imgSrc,\n      isSvg,\n      isZoomed: isZoomed && isModalActive,\n      loadedImgEl,\n      offset: zoomMargin,\n      shouldRefresh,\n      targetEl: imgEl\n    }) : {};\n    let modalContent = null;\n    if (hasImage) {\n      const modalImg = isImg || isDiv ? React.createElement(\"img\", {\n        alt: imgAlt,\n        sizes: imgSizes,\n        src: imgSrc,\n        srcSet: imgSrcSet,\n        ...(isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}),\n        \"data-rmiz-modal-img\": \"\",\n        height: this.styleModalImg.height || undefined,\n        id: idModalImg,\n        ref: refModalImg,\n        style: this.styleModalImg,\n        width: this.styleModalImg.width || undefined\n      }) : isSvg ? React.createElement(\"div\", {\n        \"data-rmiz-modal-img\": true,\n        ref: refModalImg,\n        style: this.styleModalImg\n      }) : null;\n      const modalBtnUnzoom = React.createElement(\"button\", {\n        \"aria-label\": a11yNameButtonUnzoom,\n        \"data-rmiz-btn-unzoom\": \"\",\n        onClick: handleUnzoom,\n        type: \"button\"\n      }, React.createElement(IconUnzoom, null));\n      modalContent = ZoomContent ? React.createElement(ZoomContent, {\n        buttonUnzoom: modalBtnUnzoom,\n        modalState: modalState,\n        img: modalImg,\n        onUnzoom: handleUnzoom\n      }) : React.createElement(React.Fragment, null, modalImg, modalBtnUnzoom);\n    }\n    return React.createElement(WrapElement, {\n      \"aria-owns\": idModal,\n      \"data-rmiz\": \"\",\n      ref: refWrap\n    }, React.createElement(WrapElement, {\n      \"data-rmiz-content\": dataContentState,\n      ref: refContent,\n      style: styleContent\n    }, children), hasImage && React.createElement(WrapElement, {\n      \"data-rmiz-ghost\": \"\",\n      style: styleGhost\n    }, React.createElement(\"button\", {\n      \"aria-label\": labelBtnZoom,\n      \"data-rmiz-btn-zoom\": \"\",\n      onClick: handleZoom,\n      type: \"button\"\n    }, React.createElement(IconZoom, null))), hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", {\n      \"aria-labelledby\": idModalImg,\n      \"aria-modal\": \"true\",\n      className: classDialog,\n      \"data-rmiz-modal\": \"\",\n      id: idModal,\n      onClick: handleDialogClick,\n      onClose: handleUnzoom,\n      onCancel: handleDialogCancel,\n      ref: refDialog,\n      role: \"dialog\"\n    }, React.createElement(\"div\", {\n      \"data-rmiz-modal-overlay\": dataOverlayState\n    }), React.createElement(\"div\", {\n      \"data-rmiz-modal-content\": \"\",\n      ref: refModalContent\n    }, modalContent)), this.getDialogContainer()));\n  }\n  componentDidMount() {\n    this.setId();\n    this.setAndTrackImg();\n    this.handleImgLoad();\n    this.UNSAFE_handleSvg();\n  }\n  componentWillUnmount() {\n    var _this$changeObserver2, _this$changeObserver3, _this$imgElObserver, _this$imgElObserver$d, _this$imgEl3, _this$imgEl3$removeEv, _this$imgEl4, _this$imgEl4$removeEv, _this$refModalImg$cur5, _this$refModalImg$cur6, _this$refModalImg$cur7, _this$refModalImg$cur8;\n    if (this.state.modalState !== \"UNLOADED\") {\n      this.bodyScrollEnable();\n    }\n    (_this$changeObserver2 = this.changeObserver) === null || _this$changeObserver2 === void 0 || (_this$changeObserver3 = _this$changeObserver2.disconnect) === null || _this$changeObserver3 === void 0 || _this$changeObserver3.call(_this$changeObserver2);\n    (_this$imgElObserver = this.imgElObserver) === null || _this$imgElObserver === void 0 || (_this$imgElObserver$d = _this$imgElObserver.disconnect) === null || _this$imgElObserver$d === void 0 || _this$imgElObserver$d.call(_this$imgElObserver);\n    (_this$imgEl3 = this.imgEl) === null || _this$imgEl3 === void 0 || (_this$imgEl3$removeEv = _this$imgEl3.removeEventListener) === null || _this$imgEl3$removeEv === void 0 || _this$imgEl3$removeEv.call(_this$imgEl3, 'load', this.handleImgLoad);\n    (_this$imgEl4 = this.imgEl) === null || _this$imgEl4 === void 0 || (_this$imgEl4$removeEv = _this$imgEl4.removeEventListener) === null || _this$imgEl4$removeEv === void 0 || _this$imgEl4$removeEv.call(_this$imgEl4, 'click', this.handleZoom);\n    (_this$refModalImg$cur5 = this.refModalImg.current) === null || _this$refModalImg$cur5 === void 0 || (_this$refModalImg$cur6 = _this$refModalImg$cur5.removeEventListener) === null || _this$refModalImg$cur6 === void 0 || _this$refModalImg$cur6.call(_this$refModalImg$cur5, 'transitionend', this.handleZoomEnd);\n    (_this$refModalImg$cur7 = this.refModalImg.current) === null || _this$refModalImg$cur7 === void 0 || (_this$refModalImg$cur8 = _this$refModalImg$cur7.removeEventListener) === null || _this$refModalImg$cur8 === void 0 || _this$refModalImg$cur8.call(_this$refModalImg$cur7, 'transitionend', this.handleUnzoomEnd);\n    window.removeEventListener('wheel', this.handleWheel);\n    window.removeEventListener('touchstart', this.handleTouchStart);\n    window.removeEventListener('touchmove', this.handleTouchMove);\n    window.removeEventListener('touchend', this.handleTouchEnd);\n    window.removeEventListener('touchcancel', this.handleTouchCancel);\n    window.removeEventListener('resize', this.handleResize);\n    document.removeEventListener('keydown', this.handleKeyDown, true);\n  }\n  componentDidUpdate(prevProps) {\n    this.UNSAFE_handleSvg();\n    this.handleIfZoomChanged(prevProps.isZoomed);\n  }\n}\nControlledBase.defaultProps = {\n  a11yNameButtonUnzoom: 'Minimize image',\n  a11yNameButtonZoom: 'Expand image',\n  canSwipeToUnzoom: true,\n  IconUnzoom: ICompress,\n  IconZoom: IEnlarge,\n  swipeToUnzoomThreshold: 10,\n  wrapElement: 'div',\n  zoomMargin: 0\n};\nfunction Uncontrolled(props) {\n  const [isZoomed, setIsZoomed] = React.useState(false);\n  return React.createElement(Controlled, {\n    ...props,\n    isZoomed: isZoomed,\n    onZoomChange: setIsZoomed\n  });\n}\nexport { Controlled, Uncontrolled as default };","map":{"version":3,"names":["React","ReactDOM","ICompress","createElement","fill","focusable","viewBox","xmlns","d","IEnlarge","testElType","type","el","_el$tagName","_el$tagName$toUpperCa","tagName","toUpperCase","call","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","_ref","height","offset","width","Math","min","window","innerWidth","innerHeight","getScaleToWindowMax","_ref2","containerHeight","containerWidth","targetHeight","targetWidth","scale","ratio","getScale","_ref3","hasScalableSrc","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","_URL_REGEX$exec","exec","getImgAlt","_imgEl$alt","alt","undefined","_imgEl$getAttribute","getAttribute","getImgRegularStyle","_ref4","containerLeft","containerTop","top","left","transform","concat","parsePosition","_ref5","position","relativeNum","positionNum","parseFloat","endsWith","getImgObjectFitStyle","_ref6","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getDivImgStyle","_ref7","backgroundPosition","backgroundSize","sizeW","sizeH","sizeWidth","sizeHeight","SRC_SVG_REGEX","getStyleModalImg","_ref8","_imgSrc$slice","_loadedImgEl$naturalH","_loadedImgEl$naturalW","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","isDivImg","isImgObjectFit","styleImgRegular","naturalWidth","styleImgObjectFit","styleDivImg","style","Object","assign","viewportX","viewportY","childCenterX","String","childCenterY","translateX","translateY","transitionDuration","getStyleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","adjustSvgIDs","svgEl","newIdSuffix","attrs","idMap","Map","hasAttribute","oldId","id","newId","set","querySelectorAll","forEach","urlOldID","urlNewID","attrsQuery","map","attr","join","usedEl","setAttribute","styleEl","textContent","replaceAll","IMAGE_QUERY","x","defaultBodyAttrs","overflow","Controlled","props","ControlledBase","Component","constructor","arguments","state","isZoomImgLoaded","modalState","refContent","createRef","refDialog","refModalContent","refModalImg","refWrap","isScaling","prevBodyAttrs","styleModalImg","getDialogContainer","document","querySelector","body","appendChild","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","current","_this$changeObserver","_this$changeObserver$","_this$imgEl","_this$imgEl$addEventL","_this$imgEl2","_this$imgEl2$addEvent","changeObserver","disconnect","addEventListener","handleImgLoad","handleZoom","imgElObserver","ResizeObserver","entries","entry","target","observe","MutationObserver","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","src","setLoaded","decode","then","catch","onload","hasImage","_this$props$onZoomCha","_this$props","onZoomChange","handleUnzoom","_this$props$onZoomCha2","_this$props2","handleDialogCancel","e","preventDefault","handleDialogClick","handleKeyDown","key","keyCode","stopPropagation","handleWheel","ctrlKey","queueMicrotask","handleTouchStart","touches","length","changedTouches","touchYStart","screenY","handleTouchMove","_window$visualViewpor","_window$visualViewpor2","browserScale","visualViewport","canSwipeToUnzoom","touchYEnd","delta","abs","swipeToUnzoomThreshold","handleTouchEnd","handleTouchCancel","handleResize","display","_this$refDialog$curre","_this$refDialog$curre2","_this$refModalImg$cur","_this$refModalImg$cur2","bodyScrollDisable","showModal","loadZoomImg","passive","handleZoomEnd","once","setTimeout","_this$refModalImg$cur3","_this$refModalImg$cur4","removeEventListener","handleUnzoomEnd","_this$refDialog$curre3","_this$refDialog$curre4","close","bodyScrollEnable","clientWidth","zoomImg","zoomImgSrc","_zoomImg$sizes","_zoomImg$srcSet","srcSet","UNSAFE_handleSvg","_refModalImg$current","_refModalImg$current$","_refModalImg$current2","_refModalImg$current3","cloneNode","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","imgSizes","imgSrcSet","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","styleGhost","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","Fragment","createPortal","className","onClose","onCancel","role","componentDidMount","componentWillUnmount","_this$changeObserver2","_this$changeObserver3","_this$imgElObserver","_this$imgElObserver$d","_this$imgEl3","_this$imgEl3$removeEv","_this$imgEl4","_this$imgEl4$removeEv","_this$refModalImg$cur5","_this$refModalImg$cur6","_this$refModalImg$cur7","_this$refModalImg$cur8","componentDidUpdate","prevProps","defaultProps","Uncontrolled","setIsZoomed","useState","default"],"sources":["C:/Users/LENOVO/Desktop/myapp/node_modules/react-medium-image-zoom/dist/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\nconst adjustSvgIDs = (svgEl) => {\n    const newIdSuffix = '-zoom';\n    const attrs = [\n        'clip-path',\n        'fill',\n        'mask',\n        'marker-start',\n        'marker-mid',\n        'marker-end',\n    ];\n    const idMap = new Map();\n    if (svgEl.hasAttribute('id')) {\n        const oldId = svgEl.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        svgEl.id = newId;\n    }\n    svgEl.querySelectorAll('[id]').forEach(el => {\n        const oldId = el.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        el.id = newId;\n    });\n    idMap.forEach((newId, oldId) => {\n        const urlOldID = `url(#${oldId})`;\n        const urlNewID = `url(#${newId})`;\n        const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\n        svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n            attrs.forEach(attr => {\n                if (usedEl.getAttribute(attr) === urlOldID) {\n                    usedEl.setAttribute(attr, urlNewID);\n                }\n            });\n        });\n    });\n    svgEl.querySelectorAll('style').forEach(styleEl => {\n        idMap.forEach((newId, oldId) => {\n            if (styleEl.textContent) {\n                styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\n            }\n        });\n    });\n};\n\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n        };\n        this.refContent = React.createRef();\n        this.refDialog = React.createRef();\n        this.refModalContent = React.createRef();\n        this.refModalImg = React.createRef();\n        this.refWrap = React.createRef();\n        this.imgEl = null;\n        this.isScaling = false;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.getDialogContainer = () => {\n            let el = document.querySelector('[data-rmiz-portal]');\n            if (el == null) {\n                el = document.createElement('div');\n                el.setAttribute('data-rmiz-portal', '');\n                document.body.appendChild(el);\n            }\n            return el;\n        };\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.changeObserver?.disconnect?.();\n                this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n                this.imgEl?.addEventListener?.('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({});\n                    }\n                });\n                this.imgElObserver.observe(this.imgEl);\n            }\n            else if (!this.changeObserver) {\n                this.changeObserver = new MutationObserver(this.setAndTrackImg);\n                this.changeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const { imgEl } = this;\n            const imgSrc = getImgSrc(imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(imgEl)) {\n                img.sizes = imgEl.sizes;\n                img.srcset = imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({ loadedImgEl: img });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            if (this.hasImage()) {\n                this.props.onZoomChange?.(true);\n            }\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                this.handleUnzoom();\n            }\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.touches.length > 1) {\n                this.isScaling = true;\n                return;\n            }\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            const browserScale = window.visualViewport?.scale ?? 1;\n            if (this.props.canSwipeToUnzoom &&\n                !this.isScaling &&\n                browserScale <= 1 && this.touchYStart != null &&\n                e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                if (delta > this.props.swipeToUnzoomThreshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchEnd = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleTouchCancel = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.hasImage = () => {\n            return this.imgEl &&\n                (this.state.loadedImgEl || testSvg(this.imgEl)) &&\n                window.getComputedStyle(this.imgEl).display !== 'none';\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.setState({ modalState: \"LOADING\" });\n            this.loadZoomImg();\n            window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n            window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n            window.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n            window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n            document.addEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleZoomEnd, { once: true });\n        };\n        this.handleZoomEnd = () => {\n            setTimeout(() => {\n                this.setState({ modalState: \"LOADED\" });\n                window.addEventListener('resize', this.handleResize, { passive: true });\n                window.addEventListener('wheel', this.handleWheel, { passive: true });\n            }, 0);\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n            window.removeEventListener('wheel', this.handleWheel);\n            window.removeEventListener('touchstart', this.handleTouchStart);\n            window.removeEventListener('touchmove', this.handleTouchMove);\n            window.removeEventListener('touchend', this.handleTouchEnd);\n            window.removeEventListener('touchcancel', this.handleTouchCancel);\n            document.removeEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleUnzoomEnd, { once: true });\n        };\n        this.handleUnzoomEnd = () => {\n            setTimeout(() => {\n                window.removeEventListener('resize', this.handleResize);\n                this.setState({\n                    shouldRefresh: false,\n                    modalState: \"UNLOADED\",\n                });\n                this.refDialog.current?.close?.();\n                this.bodyScrollEnable();\n            }, 0);\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const svgEl = imgEl.cloneNode(true);\n                adjustSvgIDs(svgEl);\n                svgEl.style.width = `${styleModalImg.width || 0}px`;\n                svgEl.style.height = `${styleModalImg.height || 0}px`;\n                svgEl.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svgEl);\n            }\n        };\n    }\n    render() {\n        const { handleDialogCancel, handleDialogClick, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = this.hasImage();\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        const styleGhost = getStyleGhost(imgEl);\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleUnzoom, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.changeObserver?.disconnect?.();\n        this.imgElObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleZoomEnd);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleUnzoomEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchend', this.handleTouchEnd);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps) {\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    canSwipeToUnzoom: true,\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    swipeToUnzoomThreshold: 10,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = React.useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}